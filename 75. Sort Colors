/*
  Dutch Flag Algorithm :
  Low Mid High : Low marks right most sorted 0, mid marks start of unsorted array, high marks leftmost 2 in the sorted section 
  mid sorts the arr based on the value of the unsorted section. 
  Case arr[mid] == 0 : swap the 0 with the low pointer value and increment both;
  Case arr[mid] == 1 : sorted position of 1 so increment mid by 1; 
  Case arr[mid] == 2 : swap the 2 with high value and decrement high;
*/

class Solution {
public:
    void sortColors(vector<int>& arr) {
        int low = 0,mid=0,high=arr.size()-1;
        while(mid<=high){
            if(arr[mid] == 0){
                swap(arr[low], arr[mid]);
                low++;
                mid++;
            }else if(arr[mid] == 1){
                mid++;
            }else if(arr[mid] == 2){
                swap(arr[mid], arr[high]);
                high--;
            }
        }
    }
};
