/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
  Runtime: 5 ms, faster than 25.97% of C++ online submissions for Binary Tree Inorder Traversal.
Memory Usage: 8.4 MB, less than 39.83% of C++ online submissions for Binary Tree Inorder Traversal.
 
 */

class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>order;
        TreeNode* T = root;
        stack<TreeNode*>st;
        
        while(T!=NULL || st.empty()==false){
            
            while(T!=NULL){
                st.push(T);
                T=T->left;
            }
            
            T=st.top();st.pop();
            order.push_back(T->val);
            
            T=T->right;
            
        }
        
        return order;
    }
};
